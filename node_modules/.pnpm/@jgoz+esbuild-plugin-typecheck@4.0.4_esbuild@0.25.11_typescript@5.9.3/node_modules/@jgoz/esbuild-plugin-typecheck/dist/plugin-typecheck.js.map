{
  "version": 3,
  "sources": ["../../../node_modules/.pnpm/picocolors@1.1.1/node_modules/picocolors/picocolors.js", "../src/index.ts", "../src/typecheck-runner.ts", "../src/typecheck-plugin.ts"],
  "sourcesContent": ["let p = process || {}, argv = p.argv || [], env = p.env || {}\nlet isColorSupported =\n\t!(!!env.NO_COLOR || argv.includes(\"--no-color\")) &&\n\t(!!env.FORCE_COLOR || argv.includes(\"--color\") || p.platform === \"win32\" || ((p.stdout || {}).isTTY && env.TERM !== \"dumb\") || !!env.CI)\n\nlet formatter = (open, close, replace = open) =>\n\tinput => {\n\t\tlet string = \"\" + input, index = string.indexOf(close, open.length)\n\t\treturn ~index ? open + replaceClose(string, close, replace, index) + close : open + string + close\n\t}\n\nlet replaceClose = (string, close, replace, index) => {\n\tlet result = \"\", cursor = 0\n\tdo {\n\t\tresult += string.substring(cursor, index) + replace\n\t\tcursor = index + close.length\n\t\tindex = string.indexOf(close, cursor)\n\t} while (~index)\n\treturn result + string.substring(cursor)\n}\n\nlet createColors = (enabled = isColorSupported) => {\n\tlet f = enabled ? formatter : () => String\n\treturn {\n\t\tisColorSupported: enabled,\n\t\treset: f(\"\\x1b[0m\", \"\\x1b[0m\"),\n\t\tbold: f(\"\\x1b[1m\", \"\\x1b[22m\", \"\\x1b[22m\\x1b[1m\"),\n\t\tdim: f(\"\\x1b[2m\", \"\\x1b[22m\", \"\\x1b[22m\\x1b[2m\"),\n\t\titalic: f(\"\\x1b[3m\", \"\\x1b[23m\"),\n\t\tunderline: f(\"\\x1b[4m\", \"\\x1b[24m\"),\n\t\tinverse: f(\"\\x1b[7m\", \"\\x1b[27m\"),\n\t\thidden: f(\"\\x1b[8m\", \"\\x1b[28m\"),\n\t\tstrikethrough: f(\"\\x1b[9m\", \"\\x1b[29m\"),\n\n\t\tblack: f(\"\\x1b[30m\", \"\\x1b[39m\"),\n\t\tred: f(\"\\x1b[31m\", \"\\x1b[39m\"),\n\t\tgreen: f(\"\\x1b[32m\", \"\\x1b[39m\"),\n\t\tyellow: f(\"\\x1b[33m\", \"\\x1b[39m\"),\n\t\tblue: f(\"\\x1b[34m\", \"\\x1b[39m\"),\n\t\tmagenta: f(\"\\x1b[35m\", \"\\x1b[39m\"),\n\t\tcyan: f(\"\\x1b[36m\", \"\\x1b[39m\"),\n\t\twhite: f(\"\\x1b[37m\", \"\\x1b[39m\"),\n\t\tgray: f(\"\\x1b[90m\", \"\\x1b[39m\"),\n\n\t\tbgBlack: f(\"\\x1b[40m\", \"\\x1b[49m\"),\n\t\tbgRed: f(\"\\x1b[41m\", \"\\x1b[49m\"),\n\t\tbgGreen: f(\"\\x1b[42m\", \"\\x1b[49m\"),\n\t\tbgYellow: f(\"\\x1b[43m\", \"\\x1b[49m\"),\n\t\tbgBlue: f(\"\\x1b[44m\", \"\\x1b[49m\"),\n\t\tbgMagenta: f(\"\\x1b[45m\", \"\\x1b[49m\"),\n\t\tbgCyan: f(\"\\x1b[46m\", \"\\x1b[49m\"),\n\t\tbgWhite: f(\"\\x1b[47m\", \"\\x1b[49m\"),\n\n\t\tblackBright: f(\"\\x1b[90m\", \"\\x1b[39m\"),\n\t\tredBright: f(\"\\x1b[91m\", \"\\x1b[39m\"),\n\t\tgreenBright: f(\"\\x1b[92m\", \"\\x1b[39m\"),\n\t\tyellowBright: f(\"\\x1b[93m\", \"\\x1b[39m\"),\n\t\tblueBright: f(\"\\x1b[94m\", \"\\x1b[39m\"),\n\t\tmagentaBright: f(\"\\x1b[95m\", \"\\x1b[39m\"),\n\t\tcyanBright: f(\"\\x1b[96m\", \"\\x1b[39m\"),\n\t\twhiteBright: f(\"\\x1b[97m\", \"\\x1b[39m\"),\n\n\t\tbgBlackBright: f(\"\\x1b[100m\", \"\\x1b[49m\"),\n\t\tbgRedBright: f(\"\\x1b[101m\", \"\\x1b[49m\"),\n\t\tbgGreenBright: f(\"\\x1b[102m\", \"\\x1b[49m\"),\n\t\tbgYellowBright: f(\"\\x1b[103m\", \"\\x1b[49m\"),\n\t\tbgBlueBright: f(\"\\x1b[104m\", \"\\x1b[49m\"),\n\t\tbgMagentaBright: f(\"\\x1b[105m\", \"\\x1b[49m\"),\n\t\tbgCyanBright: f(\"\\x1b[106m\", \"\\x1b[49m\"),\n\t\tbgWhiteBright: f(\"\\x1b[107m\", \"\\x1b[49m\"),\n\t}\n}\n\nmodule.exports = createColors()\nmodule.exports.createColors = createColors\n", "export * from './typecheck-plugin';\nexport * from './typecheck-runner';\nexport * from './types';\n", "import type { notify as lrNotify } from '@jgoz/esbuild-plugin-livereload';\nimport type { Message } from 'esbuild';\nimport path from 'path';\nimport pc from 'picocolors';\nimport { Worker } from 'worker_threads';\n\nimport type { Logger, TypecheckPluginOptions } from './types';\nimport type { TypescriptWorkerOptions, WorkerMessage } from './typescript-worker';\n\nconst SUCCESS = process.platform === 'win32' ? '\u221A' : '\u2714';\nconst WARNING = process.platform === 'win32' ? '\u203C' : '\u26A0';\nconst ERROR = process.platform === 'win32' ? '\u00D7' : '\u2716';\nconst INFO = process.platform === 'win32' ? 'i' : '\u2139';\n\nconst DEFAULT_LOGGER: Logger = {\n  info(message) {\n    console.info(pc.bold(INFO) + '  ' + message);\n  },\n  warn(message) {\n    console.warn(pc.bold(pc.yellow(WARNING)) + '  ' + message);\n  },\n  error(message) {\n    console.error(pc.bold(pc.red(ERROR)) + '  ' + message);\n  },\n  success(message) {\n    console.info(pc.bold(SUCCESS) + '  ' + pc.green(message));\n  },\n};\n\nconst BUILD_MSG: WorkerMessage = { type: 'build' };\n\nlet notify: typeof lrNotify = () => {};\ntry {\n  // eslint-disable-next-line @typescript-eslint/no-require-imports\n  notify = require('@jgoz/esbuild-plugin-livereload').notify;\n} catch {}\n\nexport interface TypecheckRunnerOptions extends TypecheckPluginOptions {\n  absWorkingDir: string;\n}\n\nexport class TypecheckRunner {\n  configPath: string;\n  logger: Logger;\n  worker: Worker;\n\n  constructor({\n    absWorkingDir: basedir,\n    logger = DEFAULT_LOGGER,\n    omitStartLog,\n    watch,\n    ...options\n  }: TypecheckRunnerOptions) {\n    const inputConfigFile = options.configFile;\n    const configFile = inputConfigFile\n      ? path.isAbsolute(inputConfigFile)\n        ? inputConfigFile\n        : path.resolve(basedir, inputConfigFile)\n      : undefined;\n\n    const workerData: TypescriptWorkerOptions = {\n      ...options,\n      basedir,\n      configFile,\n      watch: !!watch,\n    };\n\n    this.configPath = configFile ?? basedir;\n    this.logger = logger;\n    this.worker = new Worker(path.resolve(__dirname, './typescript-worker.js'), { workerData });\n\n    let errors: Message[] = [];\n    let warnings: Message[] = [];\n    let isBuilding: boolean | undefined;\n    let isWatching: boolean | undefined;\n\n    this.worker.on('message', (msg: WorkerMessage) => {\n      switch (msg.type) {\n        case 'start': {\n          errors = [];\n          warnings = [];\n          isBuilding ??= msg.build;\n          isWatching ??= msg.watch;\n          if (!omitStartLog) logStarted(logger, { build: isBuilding, watch: isWatching });\n          break;\n        }\n        case 'summary':\n        case 'diagnostic': {\n          errors.push(...msg.diagnostics.filter(d => d.type === 'error').map(d => d.message));\n          warnings.push(...msg.diagnostics.filter(d => d.type === 'warning').map(d => d.message));\n\n          const err = pc.isColorSupported ? msg.output.pretty : msg.output.standard;\n          if (err) console.error(err);\n          break;\n        }\n        case 'done': {\n          notify('typecheck-plugin', { added: [], removed: [], updated: [], errors, warnings });\n\n          if (msg.errorCount) {\n            logFailed(\n              logger,\n              msg.errorCount === 1 ? '1 error' : `${msg.errorCount} errors`,\n              msg.duration,\n            );\n            process.exitCode = 1;\n          } else {\n            logPassed(logger, msg.duration);\n            process.exitCode = 0;\n          }\n\n          break;\n        }\n        case 'build':\n          throw new Error('Unexpected message from worker: ' + JSON.stringify(msg));\n      }\n    });\n\n    this.worker.on('error', e => {\n      console.error(e);\n      process.exitCode = 1;\n    });\n\n    this.worker.on('exit', code => {\n      if (code !== 0) process.exitCode = code;\n    });\n  }\n\n  start() {\n    this.worker.postMessage(BUILD_MSG);\n  }\n}\n\nfunction logStarted(logger: Logger, { build = false, watch = false } = {}) {\n  const opts = [build && 'build', watch && 'watch'].filter(Boolean).join(', ');\n  const optStr = opts ? pc.cyan(` (${opts})`) : '';\n\n  logger.info('Typecheck started\u2026' + optStr);\n}\n\nfunction logPassed(logger: Logger, duration: number) {\n  logger.success('Typecheck passed');\n  logger.info(pc.gray(`Typecheck finished in ${duration.toFixed(0)}ms`));\n}\n\nfunction logFailed(logger: Logger, numErrors: string, duration: number) {\n  logger.error(`Typecheck failed with ${pc.bold(numErrors)}`);\n  logger.info(pc.gray(`Typecheck finished in ${duration.toFixed(0)}ms`));\n}\n", "import type { Plugin } from 'esbuild';\n\nimport { TypecheckRunner } from './typecheck-runner';\nimport type { TypecheckPluginOptions } from './types';\n\nexport function typecheckPlugin({\n  configFile,\n  watch,\n  ...options\n}: TypecheckPluginOptions = {}): Plugin {\n  return {\n    name: 'typecheck-plugin',\n    setup(build) {\n      const { absWorkingDir = process.cwd(), tsconfig } = build.initialOptions;\n\n      const runner = new TypecheckRunner({\n        ...options,\n        absWorkingDir,\n        configFile: configFile ?? tsconfig,\n        watch,\n      });\n\n      build.onStart(() => {\n        runner.start();\n      });\n    },\n  };\n}\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA,oFAAAA,UAAAC,SAAA;AAAA,QAAI,IAAI,WAAW,CAAC;AAApB,QAAuB,OAAO,EAAE,QAAQ,CAAC;AAAzC,QAA4C,MAAM,EAAE,OAAO,CAAC;AAC5D,QAAI,mBACH,EAAE,CAAC,CAAC,IAAI,YAAY,KAAK,SAAS,YAAY,OAC7C,CAAC,CAAC,IAAI,eAAe,KAAK,SAAS,SAAS,KAAK,EAAE,aAAa,YAAa,EAAE,UAAU,CAAC,GAAG,SAAS,IAAI,SAAS,UAAW,CAAC,CAAC,IAAI;AAEtI,QAAI,YAAY,CAAC,MAAM,OAAO,UAAU,SACvC,WAAS;AACR,UAAI,SAAS,KAAK,OAAO,QAAQ,OAAO,QAAQ,OAAO,KAAK,MAAM;AAClE,aAAO,CAAC,QAAQ,OAAO,aAAa,QAAQ,OAAO,SAAS,KAAK,IAAI,QAAQ,OAAO,SAAS;AAAA,IAC9F;AAED,QAAI,eAAe,CAAC,QAAQ,OAAO,SAAS,UAAU;AACrD,UAAI,SAAS,IAAI,SAAS;AAC1B,SAAG;AACF,kBAAU,OAAO,UAAU,QAAQ,KAAK,IAAI;AAC5C,iBAAS,QAAQ,MAAM;AACvB,gBAAQ,OAAO,QAAQ,OAAO,MAAM;AAAA,MACrC,SAAS,CAAC;AACV,aAAO,SAAS,OAAO,UAAU,MAAM;AAAA,IACxC;AAEA,QAAI,eAAe,CAAC,UAAU,qBAAqB;AAClD,UAAI,IAAI,UAAU,YAAY,MAAM;AACpC,aAAO;AAAA,QACN,kBAAkB;AAAA,QAClB,OAAO,EAAE,WAAW,SAAS;AAAA,QAC7B,MAAM,EAAE,WAAW,YAAY,iBAAiB;AAAA,QAChD,KAAK,EAAE,WAAW,YAAY,iBAAiB;AAAA,QAC/C,QAAQ,EAAE,WAAW,UAAU;AAAA,QAC/B,WAAW,EAAE,WAAW,UAAU;AAAA,QAClC,SAAS,EAAE,WAAW,UAAU;AAAA,QAChC,QAAQ,EAAE,WAAW,UAAU;AAAA,QAC/B,eAAe,EAAE,WAAW,UAAU;AAAA,QAEtC,OAAO,EAAE,YAAY,UAAU;AAAA,QAC/B,KAAK,EAAE,YAAY,UAAU;AAAA,QAC7B,OAAO,EAAE,YAAY,UAAU;AAAA,QAC/B,QAAQ,EAAE,YAAY,UAAU;AAAA,QAChC,MAAM,EAAE,YAAY,UAAU;AAAA,QAC9B,SAAS,EAAE,YAAY,UAAU;AAAA,QACjC,MAAM,EAAE,YAAY,UAAU;AAAA,QAC9B,OAAO,EAAE,YAAY,UAAU;AAAA,QAC/B,MAAM,EAAE,YAAY,UAAU;AAAA,QAE9B,SAAS,EAAE,YAAY,UAAU;AAAA,QACjC,OAAO,EAAE,YAAY,UAAU;AAAA,QAC/B,SAAS,EAAE,YAAY,UAAU;AAAA,QACjC,UAAU,EAAE,YAAY,UAAU;AAAA,QAClC,QAAQ,EAAE,YAAY,UAAU;AAAA,QAChC,WAAW,EAAE,YAAY,UAAU;AAAA,QACnC,QAAQ,EAAE,YAAY,UAAU;AAAA,QAChC,SAAS,EAAE,YAAY,UAAU;AAAA,QAEjC,aAAa,EAAE,YAAY,UAAU;AAAA,QACrC,WAAW,EAAE,YAAY,UAAU;AAAA,QACnC,aAAa,EAAE,YAAY,UAAU;AAAA,QACrC,cAAc,EAAE,YAAY,UAAU;AAAA,QACtC,YAAY,EAAE,YAAY,UAAU;AAAA,QACpC,eAAe,EAAE,YAAY,UAAU;AAAA,QACvC,YAAY,EAAE,YAAY,UAAU;AAAA,QACpC,aAAa,EAAE,YAAY,UAAU;AAAA,QAErC,eAAe,EAAE,aAAa,UAAU;AAAA,QACxC,aAAa,EAAE,aAAa,UAAU;AAAA,QACtC,eAAe,EAAE,aAAa,UAAU;AAAA,QACxC,gBAAgB,EAAE,aAAa,UAAU;AAAA,QACzC,cAAc,EAAE,aAAa,UAAU;AAAA,QACvC,iBAAiB,EAAE,aAAa,UAAU;AAAA,QAC1C,cAAc,EAAE,aAAa,UAAU;AAAA,QACvC,eAAe,EAAE,aAAa,UAAU;AAAA,MACzC;AAAA,IACD;AAEA,IAAAA,QAAO,UAAU,aAAa;AAC9B,IAAAA,QAAO,QAAQ,eAAe;AAAA;AAAA;;;AC1E9B;AAAA;AAAA;AAAA;AAAA;AAAA;;;ACEA,kBAAiB;AACjB,wBAAe;AACf,4BAAuB;AAKvB,IAAM,UAAU,QAAQ,aAAa,UAAU,WAAM;AACrD,IAAM,UAAU,QAAQ,aAAa,UAAU,WAAM;AACrD,IAAM,QAAQ,QAAQ,aAAa,UAAU,SAAM;AACnD,IAAM,OAAO,QAAQ,aAAa,UAAU,MAAM;AAElD,IAAM,iBAAyB;AAAA,EAC7B,KAAK,SAAS;AACZ,YAAQ,KAAK,kBAAAC,QAAG,KAAK,IAAI,IAAI,OAAO,OAAO;AAAA,EAC7C;AAAA,EACA,KAAK,SAAS;AACZ,YAAQ,KAAK,kBAAAA,QAAG,KAAK,kBAAAA,QAAG,OAAO,OAAO,CAAC,IAAI,OAAO,OAAO;AAAA,EAC3D;AAAA,EACA,MAAM,SAAS;AACb,YAAQ,MAAM,kBAAAA,QAAG,KAAK,kBAAAA,QAAG,IAAI,KAAK,CAAC,IAAI,OAAO,OAAO;AAAA,EACvD;AAAA,EACA,QAAQ,SAAS;AACf,YAAQ,KAAK,kBAAAA,QAAG,KAAK,OAAO,IAAI,OAAO,kBAAAA,QAAG,MAAM,OAAO,CAAC;AAAA,EAC1D;AACF;AAEA,IAAM,YAA2B,EAAE,MAAM,QAAQ;AAEjD,IAAI,SAA0B,MAAM;AAAC;AACrC,IAAI;AAEF,WAAS,QAAQ,iCAAiC,EAAE;AACtD,QAAQ;AAAC;AAMF,IAAM,kBAAN,MAAsB;AAAA,EAK3B,YAAY;AAAA,IACV,eAAe;AAAA,IACf,SAAS;AAAA,IACT;AAAA,IACA;AAAA,IACA,GAAG;AAAA,EACL,GAA2B;AACzB,UAAM,kBAAkB,QAAQ;AAChC,UAAM,aAAa,kBACf,YAAAC,QAAK,WAAW,eAAe,IAC7B,kBACA,YAAAA,QAAK,QAAQ,SAAS,eAAe,IACvC;AAEJ,UAAM,aAAsC;AAAA,MAC1C,GAAG;AAAA,MACH;AAAA,MACA;AAAA,MACA,OAAO,CAAC,CAAC;AAAA,IACX;AAEA,SAAK,aAAa,cAAc;AAChC,SAAK,SAAS;AACd,SAAK,SAAS,IAAI,6BAAO,YAAAA,QAAK,QAAQ,WAAW,wBAAwB,GAAG,EAAE,WAAW,CAAC;AAE1F,QAAI,SAAoB,CAAC;AACzB,QAAI,WAAsB,CAAC;AAC3B,QAAI;AACJ,QAAI;AAEJ,SAAK,OAAO,GAAG,WAAW,CAAC,QAAuB;AAChD,cAAQ,IAAI,MAAM;AAAA,QAChB,KAAK,SAAS;AACZ,mBAAS,CAAC;AACV,qBAAW,CAAC;AACZ,yBAAe,IAAI;AACnB,yBAAe,IAAI;AACnB,cAAI,CAAC,aAAc,YAAW,QAAQ,EAAE,OAAO,YAAY,OAAO,WAAW,CAAC;AAC9E;AAAA,QACF;AAAA,QACA,KAAK;AAAA,QACL,KAAK,cAAc;AACjB,iBAAO,KAAK,GAAG,IAAI,YAAY,OAAO,OAAK,EAAE,SAAS,OAAO,EAAE,IAAI,OAAK,EAAE,OAAO,CAAC;AAClF,mBAAS,KAAK,GAAG,IAAI,YAAY,OAAO,OAAK,EAAE,SAAS,SAAS,EAAE,IAAI,OAAK,EAAE,OAAO,CAAC;AAEtF,gBAAM,MAAM,kBAAAD,QAAG,mBAAmB,IAAI,OAAO,SAAS,IAAI,OAAO;AACjE,cAAI,IAAK,SAAQ,MAAM,GAAG;AAC1B;AAAA,QACF;AAAA,QACA,KAAK,QAAQ;AACX,iBAAO,oBAAoB,EAAE,OAAO,CAAC,GAAG,SAAS,CAAC,GAAG,SAAS,CAAC,GAAG,QAAQ,SAAS,CAAC;AAEpF,cAAI,IAAI,YAAY;AAClB;AAAA,cACE;AAAA,cACA,IAAI,eAAe,IAAI,YAAY,GAAG,IAAI,UAAU;AAAA,cACpD,IAAI;AAAA,YACN;AACA,oBAAQ,WAAW;AAAA,UACrB,OAAO;AACL,sBAAU,QAAQ,IAAI,QAAQ;AAC9B,oBAAQ,WAAW;AAAA,UACrB;AAEA;AAAA,QACF;AAAA,QACA,KAAK;AACH,gBAAM,IAAI,MAAM,qCAAqC,KAAK,UAAU,GAAG,CAAC;AAAA,MAC5E;AAAA,IACF,CAAC;AAED,SAAK,OAAO,GAAG,SAAS,OAAK;AAC3B,cAAQ,MAAM,CAAC;AACf,cAAQ,WAAW;AAAA,IACrB,CAAC;AAED,SAAK,OAAO,GAAG,QAAQ,UAAQ;AAC7B,UAAI,SAAS,EAAG,SAAQ,WAAW;AAAA,IACrC,CAAC;AAAA,EACH;AAAA,EAEA,QAAQ;AACN,SAAK,OAAO,YAAY,SAAS;AAAA,EACnC;AACF;AAEA,SAAS,WAAW,QAAgB,EAAE,QAAQ,OAAO,QAAQ,MAAM,IAAI,CAAC,GAAG;AACzE,QAAM,OAAO,CAAC,SAAS,SAAS,SAAS,OAAO,EAAE,OAAO,OAAO,EAAE,KAAK,IAAI;AAC3E,QAAM,SAAS,OAAO,kBAAAA,QAAG,KAAK,KAAK,IAAI,GAAG,IAAI;AAE9C,SAAO,KAAK,4BAAuB,MAAM;AAC3C;AAEA,SAAS,UAAU,QAAgB,UAAkB;AACnD,SAAO,QAAQ,kBAAkB;AACjC,SAAO,KAAK,kBAAAA,QAAG,KAAK,yBAAyB,SAAS,QAAQ,CAAC,CAAC,IAAI,CAAC;AACvE;AAEA,SAAS,UAAU,QAAgB,WAAmB,UAAkB;AACtE,SAAO,MAAM,yBAAyB,kBAAAA,QAAG,KAAK,SAAS,CAAC,EAAE;AAC1D,SAAO,KAAK,kBAAAA,QAAG,KAAK,yBAAyB,SAAS,QAAQ,CAAC,CAAC,IAAI,CAAC;AACvE;;;AC9IO,SAAS,gBAAgB;AAAA,EAC9B;AAAA,EACA;AAAA,EACA,GAAG;AACL,IAA4B,CAAC,GAAW;AACtC,SAAO;AAAA,IACL,MAAM;AAAA,IACN,MAAM,OAAO;AACX,YAAM,EAAE,gBAAgB,QAAQ,IAAI,GAAG,SAAS,IAAI,MAAM;AAE1D,YAAM,SAAS,IAAI,gBAAgB;AAAA,QACjC,GAAG;AAAA,QACH;AAAA,QACA,YAAY,cAAc;AAAA,QAC1B;AAAA,MACF,CAAC;AAED,YAAM,QAAQ,MAAM;AAClB,eAAO,MAAM;AAAA,MACf,CAAC;AAAA,IACH;AAAA,EACF;AACF;",
  "names": ["exports", "module", "pc", "path"]
}
