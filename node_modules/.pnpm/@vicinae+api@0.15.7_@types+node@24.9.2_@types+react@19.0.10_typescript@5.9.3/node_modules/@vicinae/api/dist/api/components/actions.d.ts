import React, { ReactNode } from "react";
import { Clipboard } from "../clipboard";
import { ImageLike } from "../image";
import { Keyboard } from "../keyboard";
import { Application } from "../utils";
import { Form } from "./form";
export type BaseActionProps = {
    title: string;
    icon?: ImageLike;
    /**
     * The shortcut to bind this action to.
     * It is highly recommended to use named shortcuts such as
     * Keyboard.Shortcut.Common.Copy as they will respect user preferences.
     */
    shortcut?: Keyboard.Shortcut | Keyboard.Shortcut.Common;
    autoFocus?: boolean;
    style?: "regular" | "destructive";
};
export type ActionProps = BaseActionProps & {
    onAction: () => void;
};
export type CopyToClipboardProps = Omit<BaseActionProps, "title"> & {
    content: string;
    concealed?: boolean;
    onCopy?: (content: string | number | Clipboard.Content) => void;
    title?: string;
};
export type ActionPushProps = BaseActionProps & {
    target: ReactNode;
};
export type ActionOpenProps = BaseActionProps & {
    target: string;
    app?: Application;
};
export type ActionPasteProps = BaseActionProps & {
    content: string;
    onPaste?: (content: string | number | Clipboard.Content) => void;
};
export type ActionOpenInBrowserProps = BaseActionProps & {
    url: string;
};
export type ActionSubmitFormProps = Omit<BaseActionProps, "title"> & {
    onSubmit: (input: Form.Values) => boolean | void | Promise<boolean | void>;
    title?: string;
};
export declare const Action: React.FC<ActionProps> & {
    CopyToClipboard: React.FC<CopyToClipboardProps>;
    Push: React.FC<ActionPushProps>;
    Open: React.FC<ActionOpenProps>;
    Paste: React.FC<ActionPasteProps>;
    SubmitForm: React.FC<ActionSubmitFormProps>;
    OpenInBrowser: React.FC<ActionOpenInBrowserProps>;
    Style: {
        Regular: "regular";
        Destructive: "destructive";
    };
};
