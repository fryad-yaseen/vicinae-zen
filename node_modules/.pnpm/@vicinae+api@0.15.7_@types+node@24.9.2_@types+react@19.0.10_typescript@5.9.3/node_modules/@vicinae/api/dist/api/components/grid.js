"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.Grid = void 0;
const jsx_runtime_1 = require("react/jsx-runtime");
const react_1 = require("react");
const crypto_1 = require("crypto");
const empty_view_1 = require("./empty-view");
const dropdown_1 = require("./dropdown");
var GridInset;
(function (GridInset) {
    GridInset["Small"] = "small";
    GridInset["Medium"] = "medium";
    GridInset["Large"] = "large";
})(GridInset || (GridInset = {}));
const aspectRatioMap = {
    '1': 1,
    '3/2': 3 / 2,
    '2/3': 2 / 3,
    '4/3': 4 / 3,
    '3/4': 3 / 4,
    '16/9': 16 / 9,
    '9/16': 9 / 16,
    '21/9': 21 / 9,
    '9/21': 9 / 21,
    '32/9': 32 / 9,
    '9/32': 9 / 32
};
var GridFit;
(function (GridFit) {
    GridFit["Contain"] = "contain";
    GridFit["Fill"] = "fill";
})(GridFit || (GridFit = {}));
const GridRoot = ({ searchBarAccessory, children, actions, inset, fit = GridFit.Contain, aspectRatio = "1", ...props }) => {
    if (typeof props.enableFiltering === "boolean" &&
        typeof props.filtering === "undefined") {
        props.filtering = props.enableFiltering;
    }
    return ((0, jsx_runtime_1.jsxs)("grid", { fit: fit, inset: inset, aspectRatio: aspectRatioMap[aspectRatio], ...props, children: [searchBarAccessory, children, actions] }));
};
const GridItem = ({ detail, actions, ...props }) => {
    const id = (0, react_1.useRef)(props.id ?? (0, crypto_1.randomUUID)());
    return ((0, jsx_runtime_1.jsxs)("grid-item", { ...props, id: id.current, children: [detail, actions] }));
};
const GridSection = ({ fit, aspectRatio, inset, ...props }) => {
    const nativeProps = {
        fit,
        aspectRatio: aspectRatio ? aspectRatioMap[aspectRatio] : aspectRatio,
        inset,
        ...props,
    };
    return (0, jsx_runtime_1.jsx)("grid-section", { ...nativeProps });
};
exports.Grid = Object.assign(GridRoot, {
    Section: GridSection,
    EmptyView: empty_view_1.EmptyView,
    Dropdown: dropdown_1.Dropdown,
    Fit: GridFit,
    Inset: GridInset,
    Item: Object.assign(GridItem, {}),
});
