import { Application } from './proto/application';
import * as wm from './proto/wm';
/**
 * Access Vicinae's window management features.
 *
 * @remarks
 * Window management features are available to a different degree depending on what environment vicinae runs
 * in.
 *
 * @example
 * ```typescript
 * import { WindowManagement } from '@vicinae/api';
 *
 * const windows = await WindowManagement.getWindows();
 * ```
 *
 * @public
 */
export declare namespace WindowManagement {
    type Window = {
        id: string;
        active: boolean;
        bounds: {
            position: {
                x: number;
                y: number;
            };
            size: {
                height: number;
                width: number;
            };
        };
        workspaceId?: string;
        application?: Application;
    };
    type Workspace = {
        id: string;
        name: string;
        monitorId: string;
        active: boolean;
    };
    function ping(): Promise<boolean>;
    function getWindows(options?: wm.GetWindowsRequest): Promise<WindowManagement.Window[]>;
    function getActiveWorkspace(): Promise<WindowManagement.Workspace>;
    function getWorkspaces(): Promise<WindowManagement.Workspace[]>;
    function getWindowsOnActiveWorkspace(): Promise<WindowManagement.Window[]>;
    function setWindowBounds(payload: wm.SetWindowBoundsRequest): Promise<void>;
    function getActiveWindow(): Promise<WindowManagement.Window>;
}
