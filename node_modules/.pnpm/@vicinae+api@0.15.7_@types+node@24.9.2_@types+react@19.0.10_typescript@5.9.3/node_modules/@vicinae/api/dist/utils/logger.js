"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.Logger = void 0;
const chalk_1 = __importDefault(require("chalk"));
class Logger {
    prefixes = {
        error: `${chalk_1.default.red("error")}${chalk_1.default.reset()}`,
        event: `${chalk_1.default.magenta("event")}${chalk_1.default.reset()}`,
        info: `${chalk_1.default.blue("info")}${chalk_1.default.reset()}`,
        ready: `${chalk_1.default.green("ready")}${chalk_1.default.reset()}`,
    };
    logError(message) {
        console.log(`${this.prefixes.error.padEnd(15)} - ${message}`);
    }
    logEvent(message) {
        console.log(`${this.prefixes.event.padEnd(15)} - ${message}`);
    }
    logInfo(message) {
        console.log(`${this.prefixes.info.padEnd(15)} - ${message}`);
    }
    logReady(message) {
        console.log(`${this.prefixes.ready.padEnd(15)} - ${message}`);
    }
    logTimestamp(s) {
        const ts = new Date().toJSON();
        const lines = s.split("\n");
        for (let i = 0; i !== lines.length; ++i) {
            const line = lines[i];
            if (i === lines.length - 1 && line.length === 0)
                continue;
            console.log(`${chalk_1.default.gray(ts.padEnd(20))}${chalk_1.default.reset()} - ${line}`);
        }
    }
}
exports.Logger = Logger;
